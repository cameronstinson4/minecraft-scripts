Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: minecraft-ssh

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues:
    - t3.micro
    - t3.medium
    - c5.large
    - z1d.large

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:

  # S3 Buckets (where backups are saved)
  minecraftS3Bucket:
    Type: AWS::S3::Bucket

  # Role for minecraft Services
  minecraftIAMRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: s3:*
              Resource:
              - !Join [ '', [ 'arn:aws:s3:::', !Ref minecraftS3Bucket ] ] 
              - !Join [ '', [ 'arn:aws:s3:::', !Ref minecraftS3Bucket, '/*' ] ] 

  # Why is this necessary
  minecraftInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - Ref: minecraftIAMRole

  # EC2 Security group
  minecraftEC2SecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: SSH, and minecraft access
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: '0.0.0.0/0'
          - IpProtocol: tcp
            FromPort: '25565'
            ToPort: '25565'
            CidrIp: '0.0.0.0/0'
          - IpProtocol: udp
            FromPort: '25565'
            ToPort: '25565'
            CidrIp: '0.0.0.0/0'
            
  # Server instance 
  minecraftEC2:
      Type: AWS::EC2::Instance
      Properties:
        InstanceType:
          Ref: InstanceType
        SecurityGroups:
          - Ref: minecraftEC2SecurityGroup
        KeyName:
          Ref: KeyName
        ImageId: 
          Ref: LatestAmiId
        IamInstanceProfile:
          Ref: minecraftInstanceProfile
        UserData:
          Fn::Base64:
            Fn::Sub:
              - |  
                #!/bin/bash
                # environment variables
                echo "S3_BUCKET_NAME=${minecraftS3Bucket}" >> /etc/environment

                # yum updates and installs
                yum update -y
                yum install git -y
                yum install java-1.8.0-openjdk-devel -y

                # clone git repo with all scripts
                mkdir /minecraft

                # create minecraft user
                adduser --no-create-home minecraft

                echo "
                [Unit]
                Description=minecraft Server
                After=network.target

                [Service]
                WorkingDirectory=/minecraft/
                User=minecraft
                Group=minecraft
                Restart=always
                RestartSec=60s
                Type=simple

                ExecStart=/usr/bin/java -Xmx1024M -Xms1024M -jar /minecraft/server.jar nogui

                ExecStop=/usr/bin/screen -p 0 -S mc-%i -X eval 'stuff "say SERVER SHUTTING DOWN. Saving map..."\\015'
                ExecStop=/usr/bin/screen -p 0 -S mc-%i -X eval 'stuff "save-all"\\015'
                ExecStop=/usr/bin/screen -p 0 -S mc-%i -X eval 'stuff "stop"\\015'
                ExecStop=/bin/sleep 10

                [Install]
                WantedBy=default.target" >> /etc/systemd/system/minecraft.service

                cd /minecraft
                git clone https://github.com/cameronstinson4/minecraft-scripts.git
                chmod +x /minecraft/minecraft-scripts/*.sh
                echo "eula=true" >> /minecraft/eula.txt

                # download minecraft
                /minecraft/minecraft-scripts/install-minecraft.sh

                chown -R minecraft:minecraft /minecraft/
                systemctl start minecraft.service

                # setup cron jobs
                (crontab -l 2>/dev/null; echo "*/15 * * * * sudo /minecraft/minecraft-scripts/backup.sh ") | crontab -
                (crontab -l 2>/dev/null; echo "@reboot sudo /minecraft/minecraft-scripts/install-minecraft.sh upgrade ") | crontab -
                (crontab -l 2>/dev/null; echo "@reboot sudo service crond start ") | crontab -

                service crond start

              - {
                minecraftS3Bucket: !Ref minecraftS3Bucket
                }
